buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://repo.spongepowered.org/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}
        
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = '1.0'
group = 'zone.rong.lolilib' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'lolilib'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
	version = "1.12.2-14.23.5.2847"
    runDir = "run"
    mappings = "snapshot_20171003"
    def args = [
            '-Dfml.coreMods.load=zone.rong.lolilib.LoliLibLoadingPlugin',
            '-Dmixin.hotSwap=true',
            '-Dmixin.checks.interfaces=true'
    ]
    clientJvmArgs.addAll(args)
    serverJvmArgs.addAll(args)
    useDepAts = true
    makeObfSourceJar = false
}

configurations {
    embed
    implementation.extendsFrom(embed)
}

repositories {
    maven {
        url "https://www.cursemaven.com"
    }
    maven {
        url "https://repo.spongepowered.org/maven"
    }
    maven {
        url "https://minecraft.curseforge.com/api/maven/"
    }
    maven {
        url "https://maven.mcmoddev.com"
    }
    maven {
        url "https://dl.bintray.com/tslat/aoa3"
    }
    maven {
        url "http://maven.tterrag.com"
    }
    maven {
        url = "http://maven.blamejared.com"
    }
}

dependencies {

    compile "net.darkhax.gamestages:GameStages-1.12.2:2.0.123" // not deobfCompile -> Cause: invalid entry compressed size (expected 1072 but got 1081 bytes)

    /* TODO: DuplicateModsFoundException
    compileOnly ("net.tslat.aoa3:aoa3:3.3") {
        transitive = false
    }
    runtime files("./libs/AoA3-3.3.6.jar") // TODO: needed? ./libs jars gets loaded automatically...
     */ // Deprecated - not using AoA3 at the moment

    compile files("./libs/mixinbooter-1.0.jar")
    compile "curse.maven:rustic:3053140"
	// deobfCompile fileTree(include: ["*.jar"], dir: "libs")
    deobfCompile "baubles:Baubles:1.12:1.5.2"

    deobfCompile "curse.maven:angry-pixel-the-betweenlands-mod:3099119"
    deobfCompile "curse.maven:applied-energistics-2:2747063"
    deobfCompile "curse.maven:astral-sorcery:3044416"
    deobfCompile "curse.maven:botania:2846950"
    deobfCompile "curse.maven:cuisine:2932722"
    deobfCompile "curse.maven:grimoire-of-gaia:2891787"
    deobfCompile "curse.maven:kiwi:2704824"
    deobfCompile "curse.maven:athenaeum:3063275"
    deobfCompile "curse.maven:dropt:2957599"
    deobfCompile "curse.maven:pyrotech:3058467"
    deobfCompile "curse.maven:the-aurorian:3074228"
    deobfCompile "curse.maven:tfcraft:3077761"
    deobfCompile 'curse.maven:thaumcraft:2629023'
    deobfCompile "curse.maven:the-twilight-forest:3051450"
    deobfCompile "curse.maven:ic2-classic:3076007"
    deobfCompile "curse.maven:metallurgy-4-reforged:3104216"
    deobfCompile "curse.maven:mysterious-mountain-lib:3106870"
    deobfCompile "curse.maven:sakura:3095422"
    deobfCompile "curse.maven:jei:3043174"
    deobfCompile "curse.maven:foamfix-optimization-mod:2704799"
    deobfCompile "curse.maven:nuclearcraft-overhauled:3072330"
    deobfCompile "curse.maven:warpdrive:3069000"
    deobfCompile "curse.maven:jeid:2919737"
    deobfCompile "net.darkhax.bookshelf:Bookshelf-1.12.2:2.3.590"
    deobfCompile "com.enderio.core:EnderCore:1.12.2-+"
    deobfCompile ("com.enderio:EnderIO:1.12.2-+") {
        transitive = false
    }
    deobfCompile (group: 'CraftTweaker2', name: 'CraftTweaker2-MC1120-Main', version: "1.12-4.1.20.594") {
        exclude group: 'org.ow2.asm'
        exclude group: 'com.google.code.gson'
    }
    /*
    embed ("org.spongepowered:mixin:0.8.1-SNAPSHOT") {
        transitive = false
    }
     */
    implementation ("org.spongepowered:mixin:0.8") {
        exclude module: "asm-commons"
        exclude module: "asm-tree"
        exclude module: "launchwrapper"
        exclude module: "guava"
        exclude module: "log4j-core"
        exclude module: "gson"
        exclude module: "commons-io"
    }
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    from (configurations.embed.collect { it.isDirectory() ? it : zipTree(it) }) {
        exclude 'LICENSE.txt', 'META-INF/MANIFSET.MF', 'META-INF/maven/**', 'META-INF/*.RSA', 'META-INF/*.SF'
    }
    manifest {
        attributes([
                "FMLCorePluginContainsFMLMod": true,
                "FMLCorePlugin": 'zone.rong.lolilib.LoliLibLoadingPlugin',
                "ForceLoadAsMod": true,
                "TweakClass": 'org.spongepowered.asm.launch.MixinTweaker'
        ])
    }
}

sourceSets {
    main {
        ext.refMap = "mixins.lolilib.refmap.json"
    }
}

jar.finalizedBy('reobfJar')

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
